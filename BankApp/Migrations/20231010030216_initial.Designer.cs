// <auto-generated />
using System;
using BankApp.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace BankApp.Migrations
{
    [DbContext(typeof(BankApplicationContext))]
    [Migration("20231010030216_initial")]
    partial class initial
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.11")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("BankApp.Models.Account", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("AccountNumber")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.Property<int?>("AccountStatusTypeId")
                        .HasColumnType("int");

                    b.Property<int?>("AccountTypeId")
                        .HasColumnType("int");

                    b.Property<decimal>("AvailableBalance")
                        .HasColumnType("decimal(10, 2)");

                    b.Property<decimal>("CurrentBalance")
                        .HasColumnType("decimal(10, 2)");

                    b.Property<DateTime?>("LastModified")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("MadeOn")
                        .HasColumnType("datetime2");

                    b.HasKey("Id")
                        .HasName("PK__Account__3214EC07BFDBBE79");

                    b.HasIndex("AccountStatusTypeId");

                    b.HasIndex("AccountTypeId");

                    b.ToTable("Account", (string)null);
                });

            modelBuilder.Entity("BankApp.Models.AccountStatusType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("AccountStatusDescription")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.HasKey("Id")
                        .HasName("PK__AccountS__3214EC07DE8B303B");

                    b.ToTable("AccountStatusType", (string)null);
                });

            modelBuilder.Entity("BankApp.Models.AccountType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("AccountTypeDescription")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.HasKey("Id")
                        .HasName("PK__AccountT__3214EC072C3DCD1D");

                    b.ToTable("AccountType", (string)null);
                });

            modelBuilder.Entity("BankApp.Models.Customer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Address1")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("Address2")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("City")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("First_Name");

                    b.Property<string>("HomePhone")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("Last_Name");

                    b.Property<string>("MiddleName")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("Middle_Name");

                    b.Property<string>("MobilePhone")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("ProfileImg")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)")
                        .HasColumnName("Profile_Img");

                    b.Property<string>("Ssn")
                        .HasMaxLength(8)
                        .IsUnicode(false)
                        .HasColumnType("varchar(8)")
                        .HasColumnName("SSN");

                    b.Property<string>("State")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("Suffix")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.Property<int?>("UserLoginId")
                        .HasColumnType("int");

                    b.Property<string>("ZipCode")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.HasKey("Id")
                        .HasName("PK__Customer__3214EC079FDB6FAF");

                    b.HasIndex("UserLoginId");

                    b.ToTable("Customer", (string)null);
                });

            modelBuilder.Entity("BankApp.Models.CustomerAccount", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("AccountId")
                        .HasColumnType("int");

                    b.Property<int?>("CustomerId")
                        .HasColumnType("int");

                    b.HasKey("Id")
                        .HasName("PK__Customer__3214EC07D83A739D");

                    b.HasIndex("AccountId");

                    b.HasIndex("CustomerId");

                    b.ToTable("CustomerAccount", (string)null);
                });

            modelBuilder.Entity("BankApp.Models.LoginAccount", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("AccountId")
                        .HasColumnType("int");

                    b.Property<int?>("UserLoginId")
                        .HasColumnType("int");

                    b.HasKey("Id")
                        .HasName("PK__LoginAcc__3214EC07B74D6085");

                    b.HasIndex("AccountId");

                    b.HasIndex("UserLoginId");

                    b.ToTable("LoginAccount", (string)null);
                });

            modelBuilder.Entity("BankApp.Models.TransactionHistory", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("AccountId")
                        .HasColumnType("int");

                    b.Property<int?>("CustomerId")
                        .HasColumnType("int");

                    b.Property<decimal?>("NewBalance")
                        .HasColumnType("decimal(10, 2)");

                    b.Property<decimal?>("TransactionAmount")
                        .HasColumnType("decimal(10, 2)");

                    b.Property<DateTime>("TransactionDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("TransactionTypeId")
                        .HasColumnType("int");

                    b.Property<int?>("UserLoginId")
                        .HasColumnType("int");

                    b.HasKey("Id")
                        .HasName("PK__Transact__3214EC0765DF341A");

                    b.HasIndex("AccountId");

                    b.HasIndex("CustomerId");

                    b.HasIndex("TransactionTypeId");

                    b.HasIndex("UserLoginId");

                    b.ToTable("TransactionHistory", (string)null);
                });

            modelBuilder.Entity("BankApp.Models.TransactionType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("TransactionTypeDescription")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("TransactionTypeName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.HasKey("Id")
                        .HasName("PK__Transact__3214EC0749943290");

                    b.ToTable("TransactionType", (string)null);
                });

            modelBuilder.Entity("BankApp.Models.UserLogin", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<byte[]>("Password")
                        .HasMaxLength(64)
                        .HasColumnType("binary(64)")
                        .IsFixedLength();

                    b.Property<string>("UserLogin1")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("UserLogin");

                    b.HasKey("Id")
                        .HasName("PK__UserLogi__3214EC0790E21248");

                    b.ToTable("UserLogin", (string)null);
                });

            modelBuilder.Entity("BankApp.Models.Account", b =>
                {
                    b.HasOne("BankApp.Models.AccountStatusType", "AccountStatusType")
                        .WithMany("Accounts")
                        .HasForeignKey("AccountStatusTypeId")
                        .HasConstraintName("FK__Account__Account__412EB0B6");

                    b.HasOne("BankApp.Models.AccountType", "AccountType")
                        .WithMany("Accounts")
                        .HasForeignKey("AccountTypeId")
                        .HasConstraintName("FK__Account__Account__403A8C7D");

                    b.Navigation("AccountStatusType");

                    b.Navigation("AccountType");
                });

            modelBuilder.Entity("BankApp.Models.Customer", b =>
                {
                    b.HasOne("BankApp.Models.UserLogin", "UserLogin")
                        .WithMany("Customers")
                        .HasForeignKey("UserLoginId")
                        .HasConstraintName("FK__Customer__UserLo__398D8EEE");

                    b.Navigation("UserLogin");
                });

            modelBuilder.Entity("BankApp.Models.CustomerAccount", b =>
                {
                    b.HasOne("BankApp.Models.Account", "Account")
                        .WithMany("CustomerAccounts")
                        .HasForeignKey("AccountId")
                        .HasConstraintName("FK__CustomerA__Accou__440B1D61");

                    b.HasOne("BankApp.Models.Customer", "Customer")
                        .WithMany("CustomerAccounts")
                        .HasForeignKey("CustomerId")
                        .HasConstraintName("FK__CustomerA__Custo__44FF419A");

                    b.Navigation("Account");

                    b.Navigation("Customer");
                });

            modelBuilder.Entity("BankApp.Models.LoginAccount", b =>
                {
                    b.HasOne("BankApp.Models.Account", "Account")
                        .WithMany("LoginAccounts")
                        .HasForeignKey("AccountId")
                        .HasConstraintName("FK__LoginAcco__Accou__5070F446");

                    b.HasOne("BankApp.Models.UserLogin", "UserLogin")
                        .WithMany("LoginAccounts")
                        .HasForeignKey("UserLoginId")
                        .HasConstraintName("FK__LoginAcco__UserL__4F7CD00D");

                    b.Navigation("Account");

                    b.Navigation("UserLogin");
                });

            modelBuilder.Entity("BankApp.Models.TransactionHistory", b =>
                {
                    b.HasOne("BankApp.Models.Account", "Account")
                        .WithMany("TransactionHistories")
                        .HasForeignKey("AccountId")
                        .HasConstraintName("FK__Transacti__Accou__4AB81AF0");

                    b.HasOne("BankApp.Models.Customer", "Customer")
                        .WithMany("TransactionHistories")
                        .HasForeignKey("CustomerId")
                        .HasConstraintName("FK__Transacti__Custo__4BAC3F29");

                    b.HasOne("BankApp.Models.TransactionType", "TransactionType")
                        .WithMany("TransactionHistories")
                        .HasForeignKey("TransactionTypeId")
                        .HasConstraintName("FK__Transacti__Trans__49C3F6B7");

                    b.HasOne("BankApp.Models.UserLogin", "UserLogin")
                        .WithMany("TransactionHistories")
                        .HasForeignKey("UserLoginId")
                        .HasConstraintName("FK__Transacti__UserL__4CA06362");

                    b.Navigation("Account");

                    b.Navigation("Customer");

                    b.Navigation("TransactionType");

                    b.Navigation("UserLogin");
                });

            modelBuilder.Entity("BankApp.Models.Account", b =>
                {
                    b.Navigation("CustomerAccounts");

                    b.Navigation("LoginAccounts");

                    b.Navigation("TransactionHistories");
                });

            modelBuilder.Entity("BankApp.Models.AccountStatusType", b =>
                {
                    b.Navigation("Accounts");
                });

            modelBuilder.Entity("BankApp.Models.AccountType", b =>
                {
                    b.Navigation("Accounts");
                });

            modelBuilder.Entity("BankApp.Models.Customer", b =>
                {
                    b.Navigation("CustomerAccounts");

                    b.Navigation("TransactionHistories");
                });

            modelBuilder.Entity("BankApp.Models.TransactionType", b =>
                {
                    b.Navigation("TransactionHistories");
                });

            modelBuilder.Entity("BankApp.Models.UserLogin", b =>
                {
                    b.Navigation("Customers");

                    b.Navigation("LoginAccounts");

                    b.Navigation("TransactionHistories");
                });
#pragma warning restore 612, 618
        }
    }
}
